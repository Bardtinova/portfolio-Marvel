{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/pages/SingleComicPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharacterByName","_ref3","_callee3","name","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","price","prices","View","comic","_jsxs","className","children","Link","to","SingleComicPage","comicId","useParams","setComic","_useMarvelService","loading","error","useEffect","updateComic","then","onComicLoaded","errorMessage","spinner","Spinner","content","_Fragment"],"mappings":"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","file":"static/js/8.c7ad1b25.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='Error'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\n\r\nconst useMarvelService  = () => {\r\nconst { request, clearError, process, setProcess} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=30a0bbb445710a12362bdc1e4a953e5d';\r\n    const _baseOffset = 210;\r\n    \r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n      const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n      return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(\r\n            `${_apiBase}/comics?orderBy=-issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n        );\r\n            return res.data.results.map(_transformComics);\r\n    };\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 220)}...` : 'There is no description here!',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items \r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || \"There's no description\",\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : \"No information about the number of pages\",\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            price: comics.prices[0].price ? `${comics.prices[0].price}$` : \"not available\" \r\n        };\r\n    };\r\n\r\n    return {clearError,\r\n            process,\r\n            setProcess,\r\n            getAllCharacters,\r\n            getCharacterByName,\r\n            getCharacter,\r\n            getAllComics,\r\n            getComic\r\n        };\r\n\r\n};\r\n\r\nexport default useMarvelService;","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    \r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            return data;\r\n        } catch(e) {\r\n            setProcess('error');\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setProcess('loading');\r\n    }, []);\r\n\r\n    return {request, clearError, process, setProcess}\r\n}\r\n\r\n","import { useParams, Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './singleComicPage.scss';\r\n\r\nconst SingleComicPage = () => {\r\n    const {comicId} = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const {loading, error, getComic, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateComic();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [comicId])\r\n\r\n\r\n\r\n    const updateComic = () => {\r\n        \r\n        clearError();\r\n        getComic(comicId)\r\n        .then(onComicLoaded)\r\n    }\r\n\r\n    const onComicLoaded = (comic) => {\r\n            setComic(comic);\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\r\n\r\n    return (\r\n        <>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({comic}) => {\r\n    const {title, description, pageCount, thumbnail, price} = comic;\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: en-us</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;"],"sourceRoot":""}
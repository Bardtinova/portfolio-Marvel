{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharacterByName","_ref3","_callee3","name","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","price","prices","AppBanner","_jsxs","className","children","avengers","avengersLogo","setContent","Component","newItemLoading","Spinner","ComicsList","comicsList","setComicsList","_useState3","_useState4","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","_toConsumableArray","arr","item","i","Link","to","renderItems","disabled","onClick","ComicsPage","_Fragment","Helmet","content"],"mappings":"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","file":"static/js/7.f8e240c8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='Error'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\n\r\nconst useMarvelService  = () => {\r\nconst { request, clearError, process, setProcess} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=30a0bbb445710a12362bdc1e4a953e5d';\r\n    const _baseOffset = 210;\r\n    \r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n      const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n      return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(\r\n            `${_apiBase}/comics?orderBy=-issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n        );\r\n            return res.data.results.map(_transformComics);\r\n    };\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 220)}...` : 'There is no description here!',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items \r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || \"There's no description\",\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : \"No information about the number of pages\",\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            price: comics.prices[0].price ? `${comics.prices[0].price}$` : \"not available\" \r\n        };\r\n    };\r\n\r\n    return {clearError,\r\n            process,\r\n            setProcess,\r\n            getAllCharacters,\r\n            getCharacterByName,\r\n            getCharacter,\r\n            getAllComics,\r\n            getComic\r\n        };\r\n\r\n};\r\n\r\nexport default useMarvelService;","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    \r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            return data;\r\n        } catch(e) {\r\n            setProcess('error');\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setProcess('loading');\r\n    }, []);\r\n\r\n    return {request, clearError, process, setProcess}\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Spinner from  '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting' :\n            return <Spinner/>;\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>;\n        case 'confirmed':\n            return <Component/>;\n         case 'error': \n            return <ErrorMessage/>;\n        default:\n            throw new Error('Unexpected process state');\n    }\n}\n\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const { getAllComics, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps        \n    }, [])\n    \n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) :  setNewItemLoading(true);\n        getAllComics(offset)\n        .then(onComicsListLoaded)\n        .then(() => setProcess('confirmed'));\n    }\n\n\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended);\n    }\n\n   function renderItems(arr) {\n    const item = arr.map((item, i) => {\n        return (\n            <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n        )\n    })\n        return (\n            <ul className=\"comics__grid\">\n                {item}\n            </ul>\n        )\n    }\n\n    return (\n        <div className=\"comics__list\">\n           {setContent(process, () => renderItems(comicsList), newItemLoading)}\n            <button \n                disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\n\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of our comics\"\r\n                />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n           <AppBanner/>\r\n           <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}